# generated 2023-06-09, Mozilla Guideline v5.7, nginx 1.25.0, OpenSSL 1.1.1n, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.25.0&config=intermediate&openssl=1.1.1n&guideline=5.7
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
        return 301 https://${DOMAIN}$request_uri;
    }
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;

    include conf.d/ssl_common.conf;

    location / {
        return 301 https://${DOMAIN}$request_uri;
    }
}

types {
    # https://www.iana.org/assignments/media-types/model/stl
    model/stl     stl;
    # https://www.iana.org/assignments/media-types/model/3mf
    model/3mf     3mf;
    # https://www.iana.org/assignments/media-types/model/step
    model/step    step;
    # https://www.iana.org/assignments/media-types/image/vnd.dxf
    image/vnd.dxf dxf;
}

map $sent_http_content_type $expires {
    default                 off;
    application/javascript  10d;
    text/css                10d;
    ~image/                 180d;
    ~model/                 180d;
}

map $upstream_http_x_content_type_options $nosniff {
    '' "nosniff";
}
map $upstream_http_content_security_policy $csp {
    '' "default-src 'none'; sandbox";
}
map $upstream_http_cross_origin_opener_policy $coop {
    '' "same-origin";
}
map $upstream_http_cross_origin_resource_policy $corp {
    '' "same-origin";
}
map $upstream_http_cross_origin_embedder_policy $coep_val {
    '' "require-corp";
}
map $upstream_http___no_implicit_coep $coep {
    default $coep_val;
    1       "";
}
map $upstream_http_permissions_policy $pp {
    '' "accelerometer=(), camera=(), browsing-topics=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()";
}

server {
    listen 443 quic reuseport;
    listen 443 ssl;
    listen [::]:443 quic reuseport;
    listen [::]:443 ssl;

    server_name ${DOMAIN};

    http2 on;

    include conf.d/ssl_common.conf;

    # required for browsers to direct them into quic port
    add_header Alt-Svc 'h3=":443"; ma=86400';

    # TODO:
    # 1. Configure caching (make it longer for images and styles if we're going to use cache busting)

    # should be overwritten by the Python server; applies only to /static (other requests are served by upstream)
    add_header X-Content-Type-Options $nosniff always;
    add_header Content-Security-Policy $csp always;
    add_header Cross-Origin-Opener-Policy $coop always;
    add_header Cross-Origin-Resource-Policy $corp always;
    add_header Cross-Origin-Embedder-Policy $coep always;
    add_header Permissions-Policy $pp always;
    proxy_hide_header  __No-Implicit-COEP;

    location / {
        proxy_pass http://unix:/run/gunicorn/gunicorn.sock;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Prefix /;

        location /addpart {
            # In theory users can upload up to 10 * 20 MiB + image (5 MiB) + the request itself (a few kB), so 206 MiB should be enough
            # in case of chaning this value modify location part edit too
            client_max_body_size 206M;
            # proxy_pass is not inherited
            proxy_pass http://unix:/run/gunicorn/gunicorn.sock;
        }

        location ~ ^/part:\d+/edit$ {
            # 206M as in /addpart
            client_max_body_size 206M;
            # proxy_pass is not inherited
            proxy_pass http://unix:/run/gunicorn/gunicorn.sock;
        }

        location /accountsettings {
            client_max_body_size 6M;
            proxy_pass http://unix:/run/gunicorn/gunicorn.sock;
        }
    }

    location /static {
        root /data;
        gzip_static on;
        expires $expires;
    }
}

server {
    # https://github.com/matomo-org/docker/blob/master/.examples/nginx/matomo.conf
    listen 443 quic;
    listen 443 ssl;
    listen [::]:443 quic;
    listen [::]:443 ssl;

    server_name analytics.${DOMAIN};

    http2 on;

    include conf.d/ssl_common.conf;

    # required for browsers to direct them into quic port
    add_header Alt-Svc 'h3=":443"; ma=86400';

    add_header X-Content-Type-Options $nosniff always;
    add_header Referrer-Policy same-origin always;
    add_header Cross-Origin-Resource-Policy same-site always;

    root /var/www/html;
    index index.php;
    try_files $uri $uri/ =404;

    ## only allow accessing the following php files
    location ~ ^/(index|matomo|piwik|js/index|plugins/HeatmapSessionRecording/configs).php {
        # regex to split $uri to $fastcgi_script_name and $fastcgi_path
        fastcgi_split_path_info ^(.+\.php)(/.+)$;

        # Check that the PHP script exists before passing it
        try_files $fastcgi_script_name =404;

        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        fastcgi_param HTTP_PROXY ""; # prohibit httpoxy: https://httpoxy.org/

        fastcgi_param HTTP_X_FORWARDED_FOR $proxy_add_x_forwarded_for;
        fastcgi_param HTTP_X_FORWARDED_PROTO $scheme;
        fastcgi_param HTTP_X_FORWARDED_HOST $host;
        fastcgi_param HTTP_X_FORWARDED_PREFIX /;

        fastcgi_pass unix:/run/matomo/matomo.sock;
    }

    ## deny access to all other .php files
    location ~* ^.+\.php$ {
        deny all;
        return 403;
    }

    ## disable all access to the following directories
    location ~ /(config|tmp|core|lang) {
        deny all;
        return 403; # replace with 404 to not show these directories exist
    }
    location ~ /\.ht {
        deny all;
        return 403;
    }

    location ~ js/container_.*_preview\.js$ {
        expires off;
        add_header Cache-Control 'private, no-cache, no-store';
        add_header X-Content-Type-Options $nosniff always;
        add_header Referrer-Policy same-origin always;
        add_header Cross-Origin-Resource-Policy same-site always;
    }

    location ~ \.(gif|ico|jpg|png|svg|js|css|htm|html|mp3|mp4|wav|ogg|avi|ttf|eot|woff|woff2|json)$ {
        allow all;
        ## Cache images,CSS,JS and webfonts for an hour
        ## Increasing the duration may improve the load-time, but may cause old files to show after an Matomo upgrade
        expires 1h;
        add_header Pragma public;
        add_header Cache-Control "public";
        add_header X-Content-Type-Options $nosniff always;
        add_header Referrer-Policy same-origin always;
        add_header Cross-Origin-Resource-Policy same-site always;
    }

    location ~ /(libs|vendor|plugins|misc/user) {
        deny all;
        return 403;
    }

    ## properly display textfiles in root directory
    location ~/(.*\.md|LEGALNOTICE|LICENSE) {
        default_type text/plain;
    }
}
