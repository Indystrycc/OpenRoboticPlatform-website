# generated 2023-06-09, Mozilla Guideline v5.7, nginx 1.25.0, OpenSSL 1.1.1n, intermediate configuration
# https://ssl-config.mozilla.org/#server=nginx&version=1.25.0&config=intermediate&openssl=1.1.1n&guideline=5.7
server {
    listen 80 default_server;
    listen [::]:80 default_server;

    location / {
        return 301 https://$host$request_uri;
    }
}

types {
    # https://www.iana.org/assignments/media-types/model/stl
    model/stl     stl;
    # https://www.iana.org/assignments/media-types/model/3mf
    model/3mf     3mf;
    # https://www.iana.org/assignments/media-types/model/step
    model/step    step;
    # https://www.iana.org/assignments/media-types/image/vnd.dxf
    image/vnd.dxf dxf;
}

map $sent_http_content_type $expires {
    default                 off;
    application/javascript  10d;
    text/css                10d;
    ~image/                 180d;
    ~model/                 180d;
}

server {
    listen 443 quic reuseport;
    listen 443 ssl;
    listen [::]:443 quic reuseport;
    listen [::]:443 ssl;

    http2 on;

    ssl_certificate /run/secrets/fullchain;
    ssl_certificate_key /run/secrets/privkey;
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
    ssl_session_tickets off;

    # https://ssl-config.mozilla.org/ffdhe2048.txt (RFC7919 A.1)
    ssl_dhparam ffdhe2048.txt;

    # intermediate configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-CHACHA20-POLY1305;
    ssl_prefer_server_ciphers off;

    # HSTS (ngx_http_headers_module is required) (63072000 seconds)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;

    # verify chain of trust of OCSP response using Root CA and Intermediate certs
    ssl_trusted_certificate /run/secrets/chain;

    # entrypoint script will populate it if $NGINX_ENTRYPOINT_LOCAL_RESOLVERS is set
    resolver ${NGINX_LOCAL_RESOLVERS};

    # required for browsers to direct them into quic port
    add_header Alt-Svc 'h3=":443"; ma=86400';

    # TODO:
    # 1. Configure caching (make it longer for images and styles if we're going to use cache busting)
    # 2. CSP? (requires fixing styles and scripts)

    # Arbitrary request size limit of 30MB
    client_max_body_size 30M;

    location / {
        proxy_pass http://unix:/run/gunicorn/gunicorn.sock;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Prefix /;

        location /addpart {
            # In theory users can upload up to 10 * 20 MiB + image (??? MiB) + the request itself (a few kB), so 202 MiB probably is enough
            client_max_body_size 202M;
            # proxy_pass is not inherited
            proxy_pass http://unix:/run/gunicorn/gunicorn.sock;
        }
    }

    location /static {
        root /data;
        gzip_static on;
        expires $expires;
    }
}
